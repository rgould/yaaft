#!/usr/bin/ruby

# == Usage
#
#  yaaft [OPTION] ALBUM...
#
#  -h, --help:            show this help and exit
#
# This file is part of YAAFT.
#
# YAAFT is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# YAAFT is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with YAAFT.  If not, see <http://www.gnu.org/licenses/>.

require "yaaft/yaaft"
require "yaaft/scrobbleCache"
require 'getoptlong'
require 'rdoc/usage'
require 'id3lib'

cache = nil

options = { "recursive" => false,
            "verbose" => false,
            "auto" => false,
            "notest" => false }

opts = GetoptLong.new(
  [ '--help', '-h', GetoptLong::NO_ARGUMENT ],
  [ '--verbose', '-v', GetoptLong::NO_ARGUMENT ],
  [ '--cache', '-c', GetoptLong::OPTIONAL_ARGUMENT ],
  [ '--auto', '-a', GetoptLong::NO_ARGUMENT ],
  [ '--notest', '-n', GetoptLong::NO_ARGUMENT]
)

begin
  opts.each do |opt, arg|
    case opt
    when '--help'
      print usage
      exit 0
    when '--recursive'
      options["recursive"] = true
    when '--verbose'
      options["verbose"] = true
    when '--cache'
      cache = ScrobbleCache.new(File.expand_path(arg))
    when '--auto'
      options["auto"] = true
    when '--notest'
      options["notest"] = true
    else
      puts "Invalid switch: #{opt}. Try --help"
      exit 1
    end
  end
rescue GetoptLong::InvalidOption => e
  puts "#{e.message}. Try --help"
end

if (cache == nil) then
  validator = YAAFT::Validator.new(ScrobbleCache.new, options)
else
  validator = YAAFT::Validator.new(cache, options)
end

validator.validate(ARGV)
